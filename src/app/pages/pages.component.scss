.close-btn {
  position: absolute !important;
  top: 20px;
  right: 20px;
  width: 50px;
  height: 50px;
  border: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--color-red);
  border-radius: 100%;
  transition: all 500ms;
  cursor: pointer;
  z-index: 10 !important;
  span {
    color: var(--color-white);
    font-size: 30px;
  }
  &:hover {
    background: var(--color-yellow);
  }
}

.justify-end {
  display: flex;
  justify-content: flex-end;
  margin-top: 20px;
}

$yellow: #ffd300;
$blue: #17d3ff;
$pink: #ff4e91;

$duration: 1000;

@function randomNum($min, $max) {
  $rand: random();
  $randomNum: $min (+ floor($rand * (($max - $min) + 1)));

  @return $randomNum;
}
.confetti {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  width: 100%;
  height: 100vh;
  overflow: hidden;
}

.confetti-piece {
  position: absolute;
  width: 8px;
  height: 16px;
  background: $yellow;
  top: 0;
  opacity: 0;

  @for $i from 1 through 13 {
    &:nth-child(#{$i}) {
      left: $i * 7%;
      transform: rotate(#{randomNum(-80, 80)}deg);
      animation: makeItRain $duration * 1ms infinite ease-out;
      animation-delay: #{randomNum(0, $duration * 0.5)}ms;
      animation-duration: #{randomNum($duration * 0.7, $duration * 1.2)}ms;
    }
  }

  &:nth-child(odd) {
    background: $blue;
  }

  &:nth-child(even) {
    z-index: 1;
  }

  &:nth-child(4n) {
    width: 5px;
    height: 12px;
    animation-duration: $duration * 2ms;
  }

  &:nth-child(3n) {
    width: 3px;
    height: 10px;
    animation-duration: $duration * 2.5ms;
    animation-delay: $duration * 1ms;
  }

  &:nth-child(4n-7) {
    background: $pink;
  }
}

@keyframes makeItRain {
  from {
    opacity: 0;
  }

  50% {
    opacity: 1;
  }

  to {
    transform: translateY(500px);
  }
}

.puzzle-bg {
  position: relative;
  background: url(../../assets/images/puzzle-background.jpg);
  background-size: cover;
  background-position: center center;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.85);
  }
  & > * {
    position: relative;
    z-index: 1;
  }
  .page-wrapper {
    display: flex;
    width: 100%;
    app-game-board {
      width: 100%;
      padding: 3% 5%;
    }
  }
  .create-by {
    position: absolute;
    bottom: 0;
    right: 20px;
    color: var(--color-white);
    font-size: 16px;
    font-style: italic;
    text-transform: uppercase;
    strong {
      color: var(--color-yellow);
    }
  }
}
.failed-message {
  font-size: 4vw;
  font-weight: 600;
  color: var(--color-red);
  text-shadow: 1px 6px 0px rgba(255, 255, 255, 0.1);
  margin: 0 0 30px;
}
.try-again {
  background: var(--color-yellow);
  border: 2px solid var(--color-white) !important;
  padding: 0 30px;
  height: 50px;
  border-radius: 30px;
  border: 0;
  font-size: 24px;
  font-weight: 700;
  cursor: pointer;
}
.congratulations-text {
  position: relative;
  font-size: 4vw;
  font-weight: 700;
  color: var(--color-yellow);
  text-shadow: 1px 6px 0px rgba(255, 255, 255, 0.1);
  animation: con-text-animation 1s infinite alternate;
}
@keyframes con-text-animation {
  0% {
    letter-spacing: 0;
  }
  100% {
    letter-spacing: 10px;
  }
}